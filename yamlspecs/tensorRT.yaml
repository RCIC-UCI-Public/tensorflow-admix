---
- package: TensorRT
  extension: tar.gz
  versions: !include versions.yaml
  pyversion: "{{versions.python_version}}"
  pyfamily: "{{versions.python_family}}"
  pymajor: "{{versions.python_major}}"
  cudaversion: "{{versions.cuda}}"
  distname: TensorRT
  name: tensorRT 
  pkgname: "{{name}}_{{version}}_python{{pyversion}}"
  version: "{{versions.tensorRT}}"
  suffix: CentOS-7.6.x86_64-gnu.cuda-10.1.cudnn7.6
  nvidiaurl: https://developer.nvidia.com/compute/machine-learning/tensorrt/secure/6.0/GA_{{version}}/tars
  src_tarball: "{{distname}}-{{version}}.{{suffix}}.{{extension}}"
  vendor_source: "{{nvidiaurl}}/{{src_tarball}}"
  description: |
    TensorRT provides API's via C++ and Python that help to express deep learning 
    models via the Network Definition API or load a pre-defined model via the parsers 
    that allows TensorRT to optimize and run them on an NVIDIA GPU.
  src_dir: "{{distname}}-{{version}}"
  root: "{{pkg_defaults.app_path}}/{{name}}/{{version}}"
  pyroot: "{{pkg_defaults.app_path}}/python/{{pyversion}}/lib/python{{pyfamily}}/site-packages"
  contents: bin doc include lib samples 
  pysuffix: cp36-none-linux_x86_64
  addfile: 
    - filter-requires-{{name}}.sh
  build:
    configure: echo configure not used 
    modules: python/{{pyversion}}
    pkgmake: 
    target:  
  install:
    makeinstall: >
      for x in {{contents}}; do cp -pR $$x/ $(ROOT){{root}}; done;
      mkdir -p $(ROOT)/{{pyroot}};
      unzip -d $(ROOT)/{{pyroot}} graphsurgeon/*.whl;
      unzip -d $(ROOT)/{{pyroot}} uff/*.whl;
      unzip -d $(ROOT)/{{pyroot}} python/*{{pysuffix}}.whl;
      (cd $(ROOT)/$(pyroot); chmod -R a+r * )
  files:
    - "{{pkg_defaults.app_path}}/{{name}}"
    - "{{pyroot}}/*"
  rpm: !include rpm.extras.filter.yaml
